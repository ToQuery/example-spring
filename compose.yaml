services:

  postgres:
    image: 'postgres:16'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: example_spring

  zipkin:
    image: 'openzipkin/zipkin:latest'
    ports:
      - '9411:9411'

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
#      - "9411:9411"   # zipkin
    volumes:
      - ./etc/tempo/tempo.yaml:/etc/tempo.yaml
      - ./data/tempo:/tmp/tempo

  node-exporter:
    image: 'prom/node-exporter:latest'
    ports:
      - '9100'

  postgres-exporter:
    image: 'prometheuscommunity/postgres-exporter:latest'
    ports:
      - '9187'
    environment:
      DATA_SOURCE_NAME: postgresql://postgres:postgres@postgres:5432/postgres?sslmode=disable

  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki:latest
    # command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_AUTH_DISABLE_LOGIN_FORM: true
    volumes:
      - ./etc/grafana/provisioning/:/etc/grafana/provisioning/ #配置grafana的prometheus数据源、dashboard
      - ./etc/grafana/dashboards:/var/lib/grafana/dashboards

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    ports:
      - "9200"
      - "9300"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044"
      - "9600"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms128m
      ELASTICSEARCH_HOST: http://elasticsearch:9200
    volumes:
      - ./etc/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./etc/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    ports:
      - '5601:5601'
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
